
from random import choice
Hangman = (
    """
     ------
     |    |
     |
     |
     |
     |
     |
    ----------
    """,
    """
     ------
     |    |
     |    O
     |
     |
     |
     |
    ----------
    """,
    """
     ------
     |    |
     |    O
     |    |
     | 
     |   
     |    
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|
     |   
     |   
     |   
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   
     |   
     |     
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   /
     |   
     |    
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   / \\
     |   
     |   
    ----------
    """
)



 # Если буква уже вводилась ранее, то выводим соответствующее сообщение
 # Пользователь вводит предполагаемую букву
# В список использованных букв добавляется введённая буква
# append() принимает один аргумент item и добавляет его в конец list.
# Тип параметра может быть любым: числа, строки, словари и так далее. Метод возвращает объект None — то есть ничего.
 # Если введённая буква есть в загаданном слове, то выводим соответствующее сообщение
 # В цикле добавляем найденную букву в нужное место




max_wrong = len(Hangman) - 1
word_list = (
    "москва", "санкт-петербург", "новосибирск", "екатеринбург", "казань", "нижний новгород",
    "челябинск", "самара", "омск", "ростов-на-дону", "уфа", "красноярск", "пермь", "воронеж",
    "волгоград", "саратов", "краснодар", "тольятти", "ижевск", "барнаул", "ульяновск",
    "владивосток", "ярославль", "махачкала", "томск", "оренбург", "кемерово", "новокузнецк",
    "рязань", "астрахань", "пенза", "липецк", "тула", "киров", "чебоксары", "калининград",
    "брянск", "курск", "иваново", "магнитогорск", "тюмень", "ставрополь", "белгород", "архангельск",
    "сургут", "смоленск", "владимир", "чита", "нальчик", "орёл", "курган", "тамбов", "стерлитамак",
    "грозный", "якутск", "кострома", "петрозаводск", "тверь", "нарьян-мар", "владикавказ",
    "йошкар-ола", "благовещенск", "северодвинск", "златоуст", "мытищи", "электросталь",
    "армавир", "химки", "подольск", "братск", "королёв", "серпухов", "балашиха", "орехово-зуево",
    "энгельс", "альметьевск", "нижнекамск", "черкесск", "новочеркасск", "домодедово",
    "назрань", "абакан", "старый оскол", "красногорск", "железногорск", "новошахтинск",
    "горно-алтайск", "ессентуки", "будённовск", "батайск", "сарепта", "лабинск", "калуга",
    "ангарск", "коломна", "шахты", "чапаевск", "рюппель"
)  # Слова для угадывания
word = choice(word_list) # Слово, которое нужно угадать
length = '_' * len(word)  # Одна черточка для каждой буквы в слове, которое нужно угадать
wrong = 0  # Количество неверных предположений, сделанных игроком
correct = []  # Буквы уже угаданы

# Цикл, который будет работать до тех пор,
# пока число максимальных ошибок не превысит количество имеющихся попыток и пока слово не будет угадано:
while wrong < max_wrong and length != word:
    print(Hangman[wrong])  # Вывод висельника по индексу
    print(f'Вы использовали следующие буквы: {correct}')
    print(f'На данный момент слово выглядит: {length}')
    answer = input('Введите свою букву: ')  # Пользователь вводит предполагаемую букву
    while answer in correct:
        print(f'Вы уже вводили букву {answer}')
        answer = input('Введите свою букву: ') 
    correct.append(answer)
    if answer in word:
        print(f'Да. {answer} есть в слове')
        new = ''
        for i in range(len(word)):
            if answer == word[i]:
                new += answer
            else:
                new += length[i]
        length = new
    else:
        print(f'Буквы {answer} нет в слове')  # Если буквы нет, то выводим соответствующее сообщение
        wrong += 1
if wrong == max_wrong:
    print(Hangman[wrong])
    print('Вы проиграли :(')  # Если игрок превысил кол-во ошибок, то его повесили
else:
    print('Вы выиграли :)')  # Если кол-во ошибок не превышено, то игрок выиграл

print(f'Загаданное слово было - {word}')



